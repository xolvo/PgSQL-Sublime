<snippet>
    <content><![CDATA[
--
-- PostgreSQL database dump
--

SET statement_timeout = 0;
SET client_encoding = 'UTF8';
SET standard_conforming_strings = on;
SET check_function_bodies = false;
SET client_min_messages = warning;

SET search_path = ${1:SCHEMA}, pg_catalog;

--
-- Name: ${2:NAME(PARAM)}; Type: FUNCTION; Schema: ${1:SCHEMA}; Owner: postgres
--

CREATE OR REPLACE FUNCTION ${2:NAME(PARAM)} RETURNS ${3:RETURN_TYPE}
    LANGUAGE plpgsql VOLATILE SECURITY INVOKER
    AS \$_\$
/*  Function:     ${1:SCHEMA}.${2:NAME(PARAM)}
    Description:  ${4:DESCRIPTION}
    Affects:      ${5}
    Arguments:    ${6}
    Returns:      ${3:RETURN_TYPE}
*/
DECLARE
    ${0}
BEGIN
EXCEPTION
    WHEN OTHERS THEN RETURN NULL;
END;
\$_\$;


ALTER FUNCTION ${1:SCHEMA}.${2:NAME(PARAM)} OWNER TO postgres;

--
-- Name: FUNCTION ${2:NAME(PARAM)}; Type: COMMENT; Schema: ${1:SCHEMA}; Owner: postgres
--

COMMENT ON FUNCTION ${2:NAME(PARAM)} IS 'DR: ${4:DESCRIPTION} (${7:DATE})';


--
-- PostgreSQL database dump complete
--


]]></content>
    <!-- Optional: Set a tabTrigger to define how to trigger the snippet -->
    <tabTrigger>functionplpgpage</tabTrigger>
    <!-- Optional: Set a scope to limit where the snippet will trigger -->
    <scope>source.sql, source.pgsql</scope>
    <!-- Optional: Set displayed description of snippet -->
    <description>Create PLPGSQL Function (page)</description>
</snippet>
